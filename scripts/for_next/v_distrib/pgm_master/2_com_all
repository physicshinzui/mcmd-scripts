
#echo " exit "
#exit

#################################
  head -1 ../../current_situation > aaa
  set mdn = `more aaa`
  rm aaa
  head -2 ../../current_situation > aaa
  tail -1 aaa > bbb
  set nst = `more bbb`
  rm aaa bbb
#################################
  echo " "
  echo " ******************************************************"
  echo " * Pdf's are saved in s* and v_pdf.                   *"
  echo " *    s* is used for the subsequent procerure.        * "
  echo " *    v_pdf is just for monitoring the shape of pdfs. *"
  echo " ******************************************************"
  echo " In this computation, the transition matrix is computed "
  echo " using iteration of a maximum-likelihood method. "
  echo " Then, it takes several minites to finish the procedure."
  echo " "
#****
  echo " <<List of some paramters used here>>"
  echo " "
  echo " (1) md No. & N. of v states = " $mdn "&" $nst " <------------ OK?"
  echo " "

  echo " (2) header of inp_c1_all:" " <------------ OK?"
  echo " "
  head -5 inp_c1_all 
  echo " "

  set pp4 = `more converg.inp`
  echo " (3) convergence factor (for t. mat. generation) = " $pp4 " <------------ OK?"
  echo "       A small convergence factor may cause a long compu. time "

  set dir_coef = /work1/t2g-hp130061/higo/OCT4/19_md/md${mdn}
  echo " "
  echo " (4) directory for aus_coef_ty2_md*.inp: "
  echo      "      " $dir_coef " <------------ OK?"
  echo " "
#****
  echo " Everything is OK? "
  echo " ####  If OK, input 1. #### "
  set ok = $<
  if( $ok == 1) goto abc
  echo " I stop here. "
  exit

abc:

# Set file for output.
  rm -r v_pdf
  rm v_pdf.*
  set out = v_pdf
  mkdir v_pdf
#################################
# Compilation.

  ifort  -o  aho.exe  main_v.f  para_inp.f  out_pdf_orig.f  out_pdf_shft.f  \
                      out_v_info.f  sum_pdf.f  sum_count.f  cal_pdf.f  \
                      t_mat.f  kp_cmat_orig.f   modi_cmat.f  cal_denomi.f  cal_denomi_orig.f  range_v.f \
                      maximum_entropy.f  \
                      err_msg.f  

#################################
# (1) Compute the original pdf.
# <output>
  ln -s e1hall.pdf fort.20
  ln -s bin.info fort.16
  ln -s tran.mat fort.21

# <input:1
  ln -s ${dir_coef}/ttp_v_mcmd.inp  fort.22
  cp  fil.all  file.name
  cp  filv.all  filev.name
  ln -s  count_intv.inp  fort.17  
  ln -s  converg.inp  fort.27

  @ ii = 1
  while ($ii <= $nst ) 
    @ idv  = 100 + $ii
    @ idv2 = 200 + $ii
    ln -s s${ii}_raw.pdf  fort.${idv}
    ln -s s${ii}.pdf  fort.${idv2}
    @ ii ++
  end

  ./aho.exe < inp_c1_all > aho_h.res

  rm fort.*
  rm file.name  filev.name

#  more aho_h.res
  rm aho.exe
#####################
# (2) Trancate zero region in the pdf made above.

  rm -r s? s?? s???

  @ ii = 1
  while( $ii <= $nst ) 
    mkdir s${ii}

#  For shifted data.
    ls -la s${ii}.pdf
    mv s${ii}.pdf  e1hall.pdf 
    csh com_dist_mk
    mv e1.pdf  s${ii}/e1.pdf

#  For raw data.
    ls -la s${ii}_raw.pdf
    mv s${ii}_raw.pdf  e1hall.pdf 
    csh com_dist_mk
    mv e1.pdf  s${ii}/e1_raw.pdf

    @ ii ++
  end
#####################
# (3) Keep pdf for monitor.

  @ ii = 1

  while( $ii <= $nst ) 
    cp s${ii}/e1.pdf  ${out}/s${ii}.pdf
    cp s${ii}/e1_raw.pdf  ${out}/s${ii}_raw.pdf
    @ ii ++
  end
#####################
#  (4) for check.

echo "   "
echo "   Finally, the files input are: "
grep " Input files = dat_some" aho_h.res 

#exit

 tar cvf ${out}.tar  ${out}
 gzip ${out}.tar 
## mv  ${out}.tar.gz  ../../../..
