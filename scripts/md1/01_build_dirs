#!/bin/bash

set -eu
export CELESTETK=/work1/t2g-16IJ0004/siida/MD_progs/celeste/toolkit/

cat << EOS

Buid directories for canonical runs at various temperatures.

Usage:
  bash $0 [INPUT no of runs in each T] [INPUT no of T] [INPUT lowest scale factor] [INPUT highest scale factor]

EOS
SECOND=0
NRUNS=$1
NTEMP=$2
L_SCALE_FACT=$3
H_SCALE_FACT=$4

TMPL_mdrun="scripts/md1/tmpl/md.inp.run"
TMPL_syscfg="scripts/md1/tmpl/system_base.cfg"
TMPL_ttpinp="scripts/md1/tmpl/pre_ttp.inp.tmpl"
LOC_runpbs="scripts/md1/run.pbs"
LOC_com_md="scripts/md1/com_md"

if [ $NTEMP -gt 1 ]; then
  interval_temp=`echo "scale=3; (${H_SCALE_FACT}-${L_SCALE_FACT})/($NTEMP-1)" | bc`
elif [ $NTEMP -le 1 ]; then
  interval_temp=${H_SCALE_FACT}
else
  echo "NTEMP is too small."
  exit
fi
echo "Scale factor interval: ", $interval_temp

CDR=$(pwd)
echo "Current directory: " $CDR

#Jugdge if md1 exists.
if [ -d "md1" ]; then
  Doesmd1Exist=true
  cd md1
else
  Doesmd1Exist=false
  { mkdir md1; echo "Build md1 dir"; cd md1; }
fi

#Buid directories for each tempeature and prepare for inputs
factor=$L_SCALE_FACT
for iT in $(seq 1 $NTEMP); do
  { mkdir $iT; cd $iT; }
  echo "#Scale factor: " $factor
  cp $LOC_runpbs .  # each T dir has a run.pbs file
  cp $LOC_com_md .

  gpuid=0
  for irun in $(seq 1 $NRUNS); do
    { mkdir n$irun; cd n$irun; }
    printf "  *In "; pwd

    echo "    Making input files in each directries, n1 n2..."
    cp  $TMPL_syscfg system.cfg
    cat $TMPL_ttpinp | sed -e "s!#{FORCE_COEF}!${factor}!g"> ttp_v_mcmd.inp
    cat $TMPL_mdrun  | sed -e "s!#{GPU_DEVICE_ID}!${gpuid}!g"> md.inp
    { gpuid=`expr $gpuid + 1`; if [ $gpuid -gt 3 ]; then echo "WARNING: GPU id is greater than 3."; exit;  fi; }
    { echo 1; echo $RANDOM; } > start.vert

    echo "    Copying the initial structure into each directory"
    DirSavingInitPDBs=/work1/t2g-16IJ0004/siida/disres_test/md1_1000_no13_md1Rest/outpdbs
    PDBPickedRandomly=`ls ${DirSavingInitPDBs} | grep restart | sort -R | head -1`
    InitPDBName=init.pdb
    echo "       ${DirSavingInitPDBs%/}/${PDBPickedRandomly} => ${InitPDBName}"
    cp ${DirSavingInitPDBs%/}/${PDBPickedRandomly} ${InitPDBName}

    echo "    Making initial restart file"
    python ${CELESTETK}/presto_generate_velocities.py \
           -i  ${InitPDBName} \
           --i-tpl /work1/t2g-16IJ0004/siida/disres_test/inputs/all.tpl \
           --i-shk /work1/t2g-16IJ0004/siida/disres_test/inputs/all.shk \
           -t 300          \
           -s $RANDOM      \
           -o init.restart \
           --mol --check > make_restart.log

    echo "    Making the binary file, .cls, as an input of omeganene"
    python ${CELESTETK}/mdinput_generator.py -i system.cfg -o md.cls -v v.0.39.h > mdinpgen.out

    cd ..
  done
  factor=`echo "$factor+$interval_temp" | bc`
  cd ..
done
